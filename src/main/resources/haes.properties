
# pre-requisite: java 1.8
# AppDynamics ES jre can be used. defined by default in <INSTALL_DIR>/appdynamics/platform/product/jre/1.8.0_231/bin
# zookeeper installed

# start HAES daemon using command line:
# appdynamics.zookeeper.monitor.Application -Dserver.port=8081 -Dzk.url=192.168.56.6:2181 -Dspring.profiles.active=dev

# ES clusters and nodes description
# should not be changed. cluster1 is always considered the active one by default.
# failover operation is always from cluster1 to cluster2
# failback (manual) is always from cluster2 to cluster1
cluster.cluster1type=active
cluster.cluster2type=passive

# ES cluster 1 (on primary DC)

# one ES node is defined using IP. port number is the default one of ES internal access. 
# it must be configured previously in events-service-api-store.properties.

# define as much ES nodes as configured in AppDynamics

#node1
esnode.cluster1[0].ip=192.168.1.30
esnode.cluster1[0].port=9200
# fake nodes
#node2
esnode.cluster1[1].ip=192.168.1.43
esnode.cluster1[1].port=9200
#node3
esnode.cluster1[2].ip=192.168.1.44
esnode.cluster1[2].port=9200

# ES cluster 2 (on secondary DC)

#node1
esnode.cluster2[0].ip=192.168.1.45
esnode.cluster2[0].port=9200
# fake nodes
#node2
esnode.cluster2[1].ip=192.168.1.47
esnode.cluster2[1].port=9200
#node3
esnode.cluster2[2].ip=192.168.1.46
esnode.cluster2[2].port=9200

# define ES local node for this HAES agent deployment (should be the IP of one of the above defined nodes)

local.ip.esnode=192.168.1.30

local.ip.loopback=127.0.0.1

#mail configuration

#spring.mail.host=gmail-smtp-in.l.google.com
#spring.mail.port=25
spring.mail.host=smtp.company.com
spring.mail.port=25
spring.mail.username=haes-admin@company.com
spring.mail.password=XXXXXX
#spring.mail.username=HAES
#spring.mail.password=gujmbibnsxkgpwlo
#spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.properties.mail.smtp.starttls.required=false
#spring.mail.properties.mail.smtp.ssl.trust=*

haes.mailsender.username=haes-admin@company.com
haes.mailsender.from=haes@company.com
haes.mailsender.subject=haes-hml
haes.mailsender.sendInterval=15
haes.mailsender.enable=true

spring.mail.properties.mail.smtp.auth=false

# HAES node type. Introduced with arbitrator. Value is "regular" or "arbitrator"
haes.node.type=regular


# ES tasks scheduled do not overlap. As an exemple, one snapshot will be triggered only if 
# if preceding snapshot has finished (spring scheduler configured this way)
# ES healthcheck every 1 minute on every node
es.healthcheck.cron:0 * * * * ?
# ES snapshot and restore every 1 hour on leader nodes
es.snapshot.cron:0 40 22 * * ?
es.restore.cron:0 30 23 * * ?


# snapshot/restore scripts root location and haes daemon script
sr.script.rootlocation=/opt/appdyn/HAES
sr.script.daemonscript=haes_snapshot.sh
sr.script.user=appdyn
sr.script.eventservicelocation=/opt/appdyn/platform/product/events-service/processor
# snapshot_repository_location is the shared NFS between data centers
# Should be empty using an S3 storage...
# this location has been previously defined using:
sr.script.snapshotrepositorylocation=
# can be rsync (snapshots are rsynced)
# or nfs (snapshots are created on the NFS shared between ES clusters)
# or S3 (snapshot are created on S3 Object storage)
sr.script.filesystemtype=S3
# haes determines which target host is elected to get the copy
# this option is to force on one selected node
# not applicable for NFS
sr.script.rsynctargethostdns=_Not_in_use_

# defines if fail over waits on last available snapshot is restored on previously passive cluster
# this does not prevent current restore to finish if any. this restore will be blocking the failover untill finished
# values yes,no

haesfail.failover.synced=yes

# Timeout waiting for primary active cluster updates before failing over
haesfail.failover.watchdogTimeout=3

# defines if fail back waits on last available snapshot is restored on previously passive cluster
# this does not prevent current restore to finish if any. this restore will be blocking the failover untill finished
# values yes,no

haesfail.failback.synced=yes

